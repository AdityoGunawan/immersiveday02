openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/IKAPUTRI23221_1/E-Commerce/1.0.0
info:
  version: "1.0.0"
  title: E-Commerce
  description: API E-Commerce ALTA
tags:
  
  - name: Auth
    description: Authentication
  - name: Users
    description: User control
  - name: Products
    description: Product data management
  - name: Cart
    description: Product on cart
  - name: Order
    description: Order management
  
paths:
  /login:
    post:
      tags:
        - Auth
      summary: login user
      description: Login user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLogin'
            
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseLoginSuccess'
              examples:
                responseData:
                  description: response success
                  value: {
                    code: 200,
                    status: "success",
                    message: "Login Success",
                    data: {
                      token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgzMjYxODAsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.AebFR-oQjUSOMez2ucDWkiMrS2eQIPmcYm5c71qZ_co"
                    }
                  }
                

        '400':
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failedResponse'
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    status: "failed",
                    message: "Login Failed. Email and Password incorrect."
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    code: 400,
                    status: "failed",
                    message: "Login Failed. Your email doesn't match any entry"
                  }
 
  /register:

   post:
      tags:
        - Auth
      summary: register
      description: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestUserData'
            examples:
              userData:
                description: "Example data user"
                value: {
                  name: "Alta",
                  email: "alta@alterra.id",
                  password: "inipassword",
                  address: "Jakarta"
                  
                }
    
              
      responses:
        '200':
          $ref: '#/components/responses/responseSuccess'
        '400':
          $ref: '#/components/responses/responseFailed'

 
  ####################################
  #  USERS
  ####################################
  /profile:
   get: 
    tags:
     - Users
    summary: Profile user
    description: Profile user
    security:
      - JWTAuth: []
    responses:
      '200':
        $ref: '#/components/responses/getMyProfile'

  /profile/product:
    get:
      tags: 
        - Users
      summary: List product User
      description: List product user
      security:
        - JWTAuth: []
      responses:
        '200':
          $ref: '#/components/responses/getAllProductSuccess'

    
        

  /users:
  
    put:
      tags:
        - Users
      summary: Update data user
      description: Edit user profile
      security:
        - JWTAuth: []
      
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Alterra Academy
                email:
                  type: string
                  example: alta@gmail.com
                password:
                  type: string
                  example: inipasswordbaru
                address:
                  type: string
                  example: Depok
      responses:
        '200':
          $ref: '#/components/responses/responseSuccess'
        '400':
          $ref: '#/components/responses/responseFailed'
    delete:
      tags:
        - Users
      summary: Delete user
      description: Delete User by ID
      security:
        - JWTAuth: []
      
      responses:
        '200':
          $ref: '#/components/responses/responseSuccess'
        '400':
          $ref: '#/components/responses/responseFailed'
  /users/{username}:
    get:
      tags:
        - Users
      description: Get User by ID
      security:
        - JWTAuth: []
      parameters:
        - name: username
          description: username
          in: path
          schema:
            type: string
            example: Alta
          required: true
      responses:
        '200':
          $ref: '#/components/responses/getUserProfileSuccess'
        '404':
          $ref: '#/components/responses/getUserProfileFailed'

  ####################################
  #  PRODUCTS
  ####################################
  /product:
    get:
      tags:
        - Products
      summary: Get all product
      description: Get all Products
      responses:
        '200':
          $ref: '#/components/responses/getAllProductSuccess'

    post:
      tags:
        - Products
      summary: Posting product
      description: Insert new Product
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Iphonge
                price:
                  type: integer
                  example: 500
                category_id:
                  type: integer
                  example: 1
                foto:
                  type: string
                  example: 324234234.jpg
                description:
                  type: string
                  example: ini adalah deskripisi dari produk-produk yang akan diisi
      responses:
        '200':
          $ref: '#/components/responses/responseSuccess'
        '400':
          $ref: '#/components/responses/responseFailed'  
    
      
  /product/search/:
    get:
      tags:
        - Products
      description: Search product by keyword
      parameters:
      - in: query
        name: name
        schema:
          type: string
          example: samsoong
     
      responses:
        '200':
          $ref: '#/components/responses/searchProductByKeywordSuccess'
        '400':
          $ref: '#/components/responses/responseFailed'
  
####################################
  #  CART
####################################

  /cart:
    post: 
      tags: 
        - Cart 
      summary: Add product to cart
      security:
        - JWTAuth: []
      description: Add product to cart
      requestBody: 
        content:
          application/json:
            schema : 
              type: object
              properties:
                  product_id:
                    type: integer
                    example: 1
      responses:
        '200':
          $ref: '#/components/responses/responseSuccess'
    get:

      tags: 
        - Cart
      summary: List product on cart
      description: Product on Cart
      security:
        - JWTAuth: []
      responses:
        '200':
          $ref: '#/components/responses/responseOnCart'
####################################
  #  ORDER
####################################
  /order/checkout:
    post:
      tags:
        - Order
      summary: Order Product
      description: Order product
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema: 
              type: object
              properties:
                payment_method:
                  type: string
                  example: COD
                address:
                  type: string
                  example: Depok
      responses:
        '200':
          $ref: '#/components/responses/responseOrder'

  /order/cart:
    post:
      tags:
        - Order
      summary: Order by cart
      description: Order by Cart
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema: 
              type: object
              properties:
                payment_method:
                  type: string
                  example: COD
                address:
                  type: string
                  example: Depok
      responses: 
        '200':
          $ref: '#/components/responses/responseOrder'


#==================================#
#    COMPONENT
#==================================#
components:

  #==================================#    
  #    JWT
  #==================================#
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  #==================================#
  #    SCHEMAS
  #==================================#
  schemas:
    requestLogin:
      type: object
      properties:
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
    requestUserData:
      type: object
      properties:
        "name":
          type: string
          minLength: 1
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
        "address":
          type: string
          minLength: 1
    responseUserData:
      type: object
      properties:
        "id":
          type: number
          minLength: 1
        "name":
          type: string
          minLength: 1
        "email":
          type: string
          minLength: 1
        "address":
          type: string
          minLength: 1
    successGetSingleUserResponse:
      type: object
      properties: {
        "code":{
          type: number
        },
        "message": {
          type: string
        },
        "status": {
          type: string
        },
        "data": {
          type: object
        }
      }
    successGetAllUserResponse:
      type: object
      properties: {
        "code":{
          type: number
        },
        "message": {
          type: string
        },
        "status": {
          type: string
        },
        "data": {
          type: array,
          items: {
            type: object
          }
        }
      }

    requestProduct:
      type: object
      properties:
        "name":
          type: string
          minLength: 1
        "price":
          type: number
        "quantity":
          type: number
          minLength: 1
        "description":
          type: string
          minLength: 1
    responseLoginSuccess:
      type: object
      properties: {
        "code":{
          type: number
        },
        "message": {
          type: string
        },
        "status": {
          type: string
        },
        "data":{
          type: object
        }
      }
    successResponse:
      type: object
      properties: {
        "code":{
          type: number
        },
        "message": {
          type: string
        },
        "status": {
          type: string
        }
      }
    failedResponse:
      type: object
      properties: {
        "code":{
          type: number
        },
        "message": {
          type: string
        },
        "status": {
          type: string
        }
      }
    
  #==================================#    
  #    PARAMETERS
  #==================================#
  # parameters:
  #   dataProduct:
  #     name: "dataProduct"
  #     in: query 

  requestBodies:
    userData:
      content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestUserData'
              type: object
              properties:
                name:
                  type: string
                  example: Alta
                email:
                  type: string
                  example: alta@mail.com
                password:
                  type: string
                  example: inipassword
                address:
                  type: string
                  example: Jakarta

  responses:
    #==================================#
    #    RESPONSE FOR GENERAL REQUEST
    #==================================#
    responseSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 200
              status:
                type: string
                example: success
              message:
                type: string
                example: Successful Operation
    responseFailed:
      description: register failed
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              status:
                type: string
                example: failed
              message:
                type: string
                example: Bad Request
    #==================================#
    #    RESPONSE REGISTER USER
    #==================================#
    registerSuccess:
      description: register success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Register Success
    registerFailed:
      description: register failed
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Register Failed
    #==================================#
    #    RESPONSE LOGIN USER
    #==================================#
    loginSuccess:
      description: login success
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 200
              status:
                type: string
                example: success
              message:
                type: string
                example: Login Success
              data:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJ1c2VySWQiOjExfQ.YQ47sxFkIfbDVyQ5o6ix38w4BYxnNOPG3F5isqkyyv8
    loginFailed:
      description: login failed
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              status:
                type: string
                example: fail
              message:
                type: string
                example: Login Failed
    #==================================#
    #    RESPONSE GET USER PROFILE
    #==================================#
    getUserProfileSuccess:
      description: success get user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 200
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Get User Profile
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: Alta
                  email:
                    type: string
                    example: alta@mail.com
                  file_foto:
                    type: string
                    example: 23768324.jpg
 #==================================#
    #    RESPONSE GET USER PROFILE
  #==================================#
    getMyProfile:
          description: success get user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Success Get User Profile
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Alta
                      email:
                        type: string
                        example: alta@mail.com
                      file_foto:
                        type: string
                        example: 23768324.jpg
                      address: 
                       type: string
                       example: Depok
                
                  
    getUserProfileFailed:
      description: fail to get user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              status:
                type: string
                example: failed
              message:
                type: string
                example: User Not Found
    #==================================#
    #    RESPONSE EDIT USER PROFILE
    #==================================#
    editUserProfileSuccess:
      description: success change user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Update Profile
    editUserProfileFailed:
      description: fail to change user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Update Profile
    #==================================#
    #    RESPONSE EDIT USER PASSWORD
    #==================================#
    editUserPasswordSuccess:
      description: success change password
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Change Password
    editUserPasswordFailed:
      description: fail to change password
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Change Password
    #==================================#
    #    RESPONSE LOGOUT
    #==================================#
    logoutSuccess:
      description: success logout
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Logout Success
    logoutFailed:
      description: fail to logout
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Logout Failed

    ##user borrowed dan userlent belum


    #==================================#
    #    RESPONSE INPUT Product RATING
    #==================================#
    inputProductRatingSuccess:
      description: success give Product rating
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Give Product Rating
    inputProductRatingFailed:
      description: fail to give Product rating
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Give Product Rating
    
    #==================================#
    #    RESPONSE INSERT Product
    #==================================#
    insertProductSuccess:
      description: success insert Product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Insert Product
    insertProductFailed:
      description: fail to insert Product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Insert Product
    #==================================#
    #    RESPONSE GET ALL Product
    #==================================#
    getAllProductSuccess:
      description: success get all product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Get All product
              data:
                type: array
                items: 
                  type: object
                  properties:
                
                    id :
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: samsoong
                    file_foto:
                      type: string
                      example: sdJksHJ12ks.jpg
                    price:
                      type: integer
                      example: 500                 
                    is_available:
                      type: boolean
                      example: true
    getAllProductFailed:
      description: fail to get all product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get All product
    #==================================#
    #    RESPONSE GET Product BY ID
    #==================================#
    getProductByIdSuccess:
      description: success get Product by ID
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 200
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Get Product By ID
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: samsoong
                  file_foto:
                    type: string
                    example: sdJksHJ12ks.jpg
                  price:
                    type: integer
                    example: 500
                  is_available:
                    type: boolean
                    example: true
    getProductByIdFailed:
      description: fail to get Product by ID
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get Product By ID
    #==================================#
    #    RESPONSE SEARCH Product
    #==================================#
    searchProductByKeywordSuccess:
      description: success search Product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Search Product
              data:
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    nmae:
                      type: string
                      example: samsoong
                    file_foto:
                      type: string
                      example: sdJksHJ12ks.jpg
                    price:
                      type: integer
                      example: 500
                    is_available:
                      type: boolean
                      example: true
    searchProductByKeywordFailed:
      description: fail to search Product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Search Product
    #==================================#
    #    RESPONSE GET LIST CATEGORY
    #==================================#
    getListCategorySuccess:
      description: success get list category
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Get List Category
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 2
                    name:
                      type: string
                      example: Sejarah
    getListCategoryFailed:
      description: fail to get list category
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get List Category

    #==================================#
    #    RESPONSE GET TRANSACTION
    #==================================#
    getTransactionSuccess:
      description: success get transaction
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Get Transaction
    getTransactionFailed:
      description: fail to get transaction
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Get Transaction
   #==================================#
    #    RESPONSE ON CART
    #==================================#
    responseOnCart:
      description: success get product on cart
      content:
        application/json:
          schema:
            type: object
            properties: 
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 2
                    name:
                      type: string
                      example: Sejarah
                    price:
                      type: integer
                      example: 999
                    foto:
                      type: string
                      example: 3454574ytegr.jpg
#==================================#
    #    RESPONSE ORDER
#==================================#

    responseOrder:
      description: success 
      content:
        application/json:
          schema:
            type: object
            properties: 
              dataUser:
                type: object
                properties:
                    
                    name:
                      type: string
                      example: Sejarah
                    address:
                      type: string
                      example: Depok
                
                  
                    
              dataProduct:
                type: array
                items:
                  type: object
                  properties:
                    Id:
                     type: integer
                     example: 2       
                    name:
                      type: string
                      example: Sejarah      
                    price:
                      type: integer
                      example: 999
                    foto:
                      type: string
                      example: 3454574ytegr.jpg       
                        
                          
                            
                
                    
                     
                    
   

   
   
   #==================================#
    #    RESPONSE CREATE TRANSACTION
    #==================================#
    createTransactionSuccess:
      description: success create transaction
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Success Create Transaction
    createTransactionFailed:
      description: fail to create transaction
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Fail to Create Transaction
    #==================================#
    #    DEFAULT RESPONSE
    #==================================#
    operationSuccess:
      description: operation success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Operation Success
    operationFailed:
      description: operation failed
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: fail
              message:
                type: string
                example: Operation Failed
